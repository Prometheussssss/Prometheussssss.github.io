<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus&#39;s Blog on Prometheus&#39;s Blog</title>
    <link>https://Prometheussssss.github.io/</link>
    <description>Recent content in Prometheus&#39;s Blog on Prometheus&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Aug 2019 10:34:27 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MySQL System Tables &amp; Hashcat</title>
      <link>https://Prometheussssss.github.io/2019/mysql-system-tables/</link>
      <pubDate>Sun, 25 Aug 2019 10:34:27 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/mysql-system-tables/</guid>
      <description>

&lt;h1 id=&#34;数据库系统表相关学习&#34;&gt;数据库系统表相关学习&lt;/h1&gt;

&lt;h3 id=&#34;利用数据库的功能读写文件&#34;&gt;利用数据库的功能读写文件&lt;/h3&gt;

&lt;p&gt;首先介绍一下在MySQL 5.7.6引入的新特性&amp;ndash;secure_file_priv参数&lt;/p&gt;

&lt;p&gt;这个参数用来限制数据导入和导出操作的效果，例如执行LOAD DATA、SELECT … INTO OUTFILE语句和LOAD_FILE()函数。这些操作需要用户具有FILE权限。
如果这个参数为空，这个变量没有效果；
如果这个参数设为一个目录名，MySQL服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它；
如果这个参数为NULL，MySQL服务会禁止导入和导出操作。&lt;/p&gt;

&lt;p&gt;我们可以使用&lt;code&gt;show variables like &amp;quot;%secure%&amp;quot;&lt;/code&gt;查一下当前字段设置&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566437000370.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;打开我们的配置文件，加上&lt;code&gt;secure_file_priv=&amp;quot;/&amp;quot;&lt;/code&gt;意为允许将数据导出到任意目录&lt;/p&gt;

&lt;p&gt;再次查看，修改成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566437189152.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;进行一下测试&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566437366824.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566437406483.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到文件是用户mysql创建的&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566437472650.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如果mysql用户权限不足就会报错&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566438709389.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;总结：想要进行文件读写需满足以下条件&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;目标目录要有可写权限&lt;/li&gt;
&lt;li&gt;当前数据库用户要有FILE权限&lt;/li&gt;
&lt;li&gt;目标文件不能已存在&lt;/li&gt;
&lt;li&gt;secure_file_priv的值为空(如果值为某一文件夹，那么仅该目录可操作)&lt;/li&gt;
&lt;li&gt;路径完整&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;mysql中的系统表&#34;&gt;mysql中的系统表&lt;/h3&gt;

&lt;p&gt;在mysql v5.7.26中主要有这四个系统库&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566525297139.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;重点关注&lt;code&gt;information_schema&lt;/code&gt;和&lt;code&gt;mysql&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;information-schema数据库部分表说明&#34;&gt;information_schema数据库部分表说明&lt;/h4&gt;

&lt;p&gt;•SCHEMATA表：提供了当前mysql实例中所有数据库的信息。是show databases的结果取之此表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566567101870.png&#34; alt=&#34;&#34; /&gt;
•TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。是show tables from schemaname的结果取之此表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568522806.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。是show columns from schemaname.tablename的结果取之此表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568766875.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•STATISTICS表：提供了关于表索引的信息。是show index from schemaname.tablename的结果取之此表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568839648.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•USER_PRIVILEGES（用户权限）表：给出了关于全程权限的信息。该信息源自mysql.user授权表。是非标准表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568456816.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•SCHEMA_PRIVILEGES（方案权限）表：给出了关于方案（数据库）权限的信息。该信息来自mysql.db授权表。是非标准表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566569364688.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•TABLE_PRIVILEGES（表权限）表：给出了关于表权限的信息。该信息源自mysql.tables_priv授权表。是非标准表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566569398959.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•COLUMN_PRIVILEGES（列权限）表：给出了关于列权限的信息。该信息源自mysql.columns_priv授权表。是非标准表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566569433918.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•CHARACTER_SETS（字符集）表：提供了mysql实例可用字符集的信息。是SHOW CHARACTER SET结果集取之此表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566569491095.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•COLLATIONS表：提供了关于各字符集的对照信息。
•COLLATION_CHARACTER_SET_APPLICABILITY表：指明了可用于校对的字符集。这些列等效于SHOW COLLATION的前两个显示字段。
•TABLE_CONSTRAINTS表：描述了存在约束的表。以及表的约束类型。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566614460546.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•KEY_COLUMN_USAGE表：描述了具有约束的键列。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566614515627.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•ROUTINES表：提供了关于存储子程序（存储程序和函数）的信息。此时，ROUTINES表不包含自定义函数（UDF）。名为“mysql.proc name”的列指明了对应于INFORMATION_SCHEMA.ROUTINES表的mysql.proc表列。&lt;/p&gt;

&lt;p&gt;•VIEWS表：给出了关于数据库中的视图的信息。需要有show views权限，否则无法查看视图信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568608499.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;•TRIGGERS表：提供了关于触发程序的信息。必须有super权限才能查看该表
&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566568661655.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;mysql数据库部分表说明&#34;&gt;mysql数据库部分表说明&lt;/h4&gt;

&lt;p&gt;在mysql数据库中，有mysql_install_db脚本初始化权限表，存储权限的表有：&lt;/p&gt;

&lt;p&gt;1、user表: 用户列、权限列、安全列、资源控制列&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566699286976.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2、db表 : 用户列、权限列&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566699330793.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;prtformance-schema见-4&#34;&gt;PRTFORMANCE_SCHEMA见[4]&lt;/h4&gt;

&lt;h3 id=&#34;利用hashcat进行密码破解&#34;&gt;利用hashcat进行密码破解&lt;/h3&gt;

&lt;p&gt;在数据库中使用&lt;code&gt;select user,authentication_string from mysql.user;&lt;/code&gt;查看加密后用户密码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566520635080.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;hashcat语句为&lt;code&gt;.\hashcat64.exe -a 0 -m 300 --force A4B6157319038724E3560894F7F932C8886EBFCF ./example.dict -o C:\Users\Administrator\Desktop\1.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-a 0     #指定破解类型，0为字典破解,3为暴力破解
-m 300   #指定hash类型，300是MySQL4.1/MySQL5
-o dir   #指定输出文件位置
./example.dict 为字典
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在使用物理机上的hashcat时报错，网上查原因是笔记本电脑不支持此函数&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566521508322.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;但是破解还是成功了&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566522770070.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566522785684.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;尝试使用暴力破解&lt;/p&gt;

&lt;p&gt;可用掩码有&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566527066230.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;语句为&lt;code&gt;.\hashcat64.exe -a 3 -m 300 --keep-guessing 764ADB88446D4A100F3B4B0E3F68A628D8306915 --increment --increment-min 1 --increment-max 8 ?l?l?l?l?l?l?l?l -o C:\Users\Administrator\Desktop\1.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/MySQL-System-Tables/1566527559869.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://blog.csdn.net/HHTNAN/article/details/78520511&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/HHTNAN/article/details/78520511&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&#34;https://blog.csdn.net/caiqiiqi/article/details/84673007&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/caiqiiqi/article/details/84673007&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] &lt;a href=&#34;https://blog.csdn.net/xlxxcc/article/details/51754524&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/xlxxcc/article/details/51754524&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4] &lt;a href=&#34;https://www.cnblogs.com/zhoujinyi/p/5236705.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;PERFORMANCE_SCHEMA 说明&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Language</title>
      <link>https://Prometheussssss.github.io/2019/sql-language/</link>
      <pubDate>Thu, 08 Aug 2019 15:59:30 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/sql-language/</guid>
      <description>

&lt;h1 id=&#34;sql基础知识&#34;&gt;SQL基础知识&lt;/h1&gt;

&lt;h2 id=&#34;sql与nosql的区别&#34;&gt;SQL与NoSQL的区别&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;类型区别：SQL数据库主要被称为关系型数据库，而NoSQL主要被称为非关系型数据库或分布式数据库。&lt;/li&gt;
&lt;li&gt;语言：SQL数据库基于结构化查询语言（SQL）定义和操作数据。从一方面看看这种语言是非常强大的。SQL是最通用和最广泛使用的选项之一，这使使其成为一个安全的选择，而且尤其适用于复杂的查询。但从另一方面来说，它也有局限性。SQL要求在使用之前预先确定数据的结构，并且所有数据都必须遵循相同的结构。这可能需要大量的前期准备，并且这通常意味着这意味着结构的变化更加困难而且会对对整个系统造成破坏。
   NoSQL数据库具有非结构化数据的动态模式。数据以多种方式存储，这意味着它可以是面向文档，面向列，基于图形或键值存储。这种灵活性意味着可以在没有首先定义结构的情况下创建文档。每个文档也可以有自己独特的结构。语法因数据库而异，可以随时添加字段。&lt;/li&gt;
&lt;li&gt;可伸缩性：在几乎任何情况下，SQL数据库都是可垂直扩展的。这意味着可以通过增加RAM，CPU或SSD等功能来增加单个服务器的负载。但另一方面，NoSQL数据库可以横向扩展。这意味着您可以通过分片或在NoSQL数据库中添加更多服务器来处理更多流量。它类似于在同一建筑物中添加更多楼层，而不是在附近增加更多建筑物。因此NoSQL最终可以变得更大，更强大，使这些数据库成为大型或不断变化的数据集的首选。&lt;/li&gt;
&lt;li&gt;结构：SQL数据库是基于表的，另一方面NoSQL数据库是键值对，基于文档的，图形数据库或宽列存储。这使得关系SQL数据库成为需要多行事务的应用程序（如会计系统）或为关系结构构建的遗留系统的更好选择。&lt;/li&gt;
&lt;li&gt;遵循的属性：SQL数据库遵循ACID属性（原子性，一致性，隔离性和持久性），而NoSQL数据库遵循Brewers CAP定理（一致性，可用性和分区容差）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SQL数据库的一些示例包括PostgreSQL，MySQL，Oracle和Microsoft SQL Server。NoSQL数据库示例包括Redis，RavenDB Cassandra，MongoDB，BigTable，HBase，Neo4j和CouchDB。&lt;/p&gt;

&lt;h2 id=&#34;理论学习&#34;&gt;理论学习&lt;/h2&gt;

&lt;p&gt;MySQL支持多种数据类型，大致可分为：数值、日期/时间、字符串三类。&lt;/p&gt;

&lt;h3 id=&#34;数值类型&#34;&gt;数值类型&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565359151713.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;日期和时间类型&#34;&gt;日期和时间类型&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565359246197.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;字符串类型&#34;&gt;字符串类型&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565359279854.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;好的，开始实际操作&lt;/p&gt;

&lt;p&gt;用户登录mysql -u 用户名 -p 密码 (-h 远程登录ip）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;show databases; #显示数据库信息
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565424361280.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;MySQL v5.7.26初始有这四个库，其中：&lt;/p&gt;

&lt;p&gt;information_schema是一个信息数据库，它保存着关于MySQL服务器所维护的所有其他数据库的信息。(如数据库名，数据库的表，表栏的数据类型与访问权限等。&lt;/p&gt;

&lt;p&gt;mysql是mysql的核心数据库，类似于sql server中的master表，主要负责存储数据库的用户、权限设置、关键字等mysql自己需要使用的控制和管理信息。&lt;/p&gt;

&lt;p&gt;performance_schema主要用于收集数据库服务器性能参数。并且库里表的存储引擎均为PERFORMANCE_SCHEMA，而用户是不能创建存储引擎为PERFORMANCE_SCHEMA的表。MySQL5.7默认是开启的。&lt;/p&gt;

&lt;p&gt;sys库所有的数据源来自：performance_schema。目标是把performance_schema的把复杂度降低，让DBA能更好的阅读这个库里的内容。让DBA更快的了解DB的运行情况。&lt;/p&gt;

&lt;h2 id=&#34;实际操作&#34;&gt;实际操作&lt;/h2&gt;

&lt;p&gt;常用语句有：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;use test; #选取数据库test
create table student(...,...,...);  #建student表
show tables; #查看所有数据表
desc student; #查看student表的字段信息
insert into student values(...,...,...); #向student表中插入数据
show create table student; #查看student表的所有信息，包括一些字段类型，字段的约束，外键，主键，索引，字符编码等等。
drop table student; #删除student表
select * from student where id=12345;   #查询id为12345同学信息
select id from student where name like &#39;L%&#39;; #查询名字以L开头同学的学号
select * from score where id=(select id from student where name=&#39;Lily&#39;);
                                         #查询Lily的成绩
alter table student change name stu_name varchar(20); #修改字段名
alter table student add grade smallint;   #向student表中增加grade列
update student set id=11111 where stu_name=&#39;Tom&#39;; #修改内容
delete from student where id=12347; #删除student中学号为12345同学信息
drop table score; #删除score表
drop database test; #删除test库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;实际操作:建立学生表，主键为学号，存有学号、姓名、性别。建立成绩表，主键为学号，存有语文、数学、英语。成绩表学号为学生表外键。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565449775756.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565495436385.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565495970588.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;但是在后续的操作中发现即使添加了check约束也没有起到应有的作用。经过搜索在MYSQL中，CHECK只是一段可调用但无意义的子句。MySQL会直接忽略。因此，在想限制的字段不多时，可以采用enum()。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565510814624.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565511034820.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;外来键是一个(或数个)指向另外一个表格主键的栏位。目的是确定资料的参考完整性(referential integrity)。换言之，只有被准许的资料值才会被存入资料库内。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565511636270.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565512394035.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。UNION ALL 用于将不同表中相同列中查询的数据展示出来。（包括重复数据）使用union操作符要保证查询结果的列数一致。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/Basic-knowledge/SQL-language/1565514177770.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;

&lt;p&gt;[1]&lt;a href=&#34;https://www.geeksforgeeks.org/difference-between-sql-and-nosql/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.geeksforgeeks.org/difference-between-sql-and-nosql/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2]&lt;a href=&#34;http://www.runoob.com/mysql/mysql-data-types.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.runoob.com/mysql/mysql-data-types.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3]&lt;a href=&#34;https://blog.csdn.net/cainiao000001/article/details/80502549&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/cainiao000001/article/details/80502549&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4]&lt;a href=&#34;https://blog.csdn.net/yanzongshuai/article/details/73441158&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/yanzongshuai/article/details/73441158&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[5]&lt;a href=&#34;https://blog.csdn.net/qq_39521554/article/details/78681681&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/qq_39521554/article/details/78681681&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build Lnmp Environment</title>
      <link>https://Prometheussssss.github.io/2019/build-lnmp-environment/</link>
      <pubDate>Thu, 08 Aug 2019 10:16:49 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/build-lnmp-environment/</guid>
      <description>

&lt;h1 id=&#34;环境准备&#34;&gt;环境准备&lt;/h1&gt;

&lt;h3 id=&#34;安装centos7&#34;&gt;安装CentOS7&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1563947987000.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;安装nginx&#34;&gt;安装nginx&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装CentOS7时选择安装了基本开发环境，所以不必先安装gcc，gcc-c++&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;==1. 安装rewrite模块所需PCRE库==&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/loacl                        #将其装入local文件夹中
wget https://sourceforge.net/projects/pcre/files/pcre/8.43/pcre-8.43.tar.gz
#下载最新PCRE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564065435672.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar -zxvf pcre-8.43.tar.gz #解压
cd pcre-8.36
./configure          #配置环境
make &amp;amp;&amp;amp; make install #编译安装
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564065879269.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;==2. 安装SSL库==&lt;/p&gt;

&lt;p&gt;和第一步原理类似&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ..
wget http://www.openssl.org/source/openssl-1.1.1c.tar.gz
tar -zxvf openssl-1.0.1j.tar.gz
cd openssl-1.0.1j
./configure
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;==3. 安装zlib库==&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/local/
wget http://zlib.net/zlib-1.2.11.tar.gz
tar -zxvf zlib-1.2.11.tar.gz
cd zlib-1.2.11
./configure
make &amp;amp;&amp;amp; make instal
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;==4.安装nginx==&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/local/
wget http://nginx.org/download/nginx-1.16.0.tar.gz
tar -zxvf nginx-1.16.0.tar.gz
cd nginx-1.16.0 
./configure --user=nobody --group=nobody --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_gzip_static_module --with-http_realip_module --with-http_sub_module --with-http_ssl_module
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功后/usr/local/nginx/sbin/nginx命令报错&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564068688167.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ldd /usr/local/nginx/sbin/nginx查看一下依赖&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564069821657.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;网上查找后我觉得之前将openssl装在了/usr/local里，所以应该建立软连接&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564070843981.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再看一下依赖&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564070935260.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;之后再/usr/local/nginx/sbin/nginx启动成功！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564071047339.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;安装php并配置nginx&#34;&gt;安装PHP并配置nginx&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/local/
wget https://www.php.net/distributions/php-7.3.7.tar.gz
tar -zxvf php-7.3.7.tar.gz
cd php-7.3.7
./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-mcrypt=/usr/include --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --with-iconv --with-zlib --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --enable-mbregex --enable-fpm --enable-mbstring --enable-ftp --with-openssl --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --enable-session --with-curl --with-jpeg-dir --with-freetype-dir --enable-opcache #配置环境
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564118391756.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;提示libxml2未找到，选择直接yum安装它&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libxml2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示已安装最新版本，网上查找提示再安装libxml2-devel&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libxml2-devel.x68_64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564119053349.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;然而又提示configure: error: Cannot find OpenSSL&amp;rsquo;s libraries&lt;/p&gt;

&lt;p&gt;网上查得知尽管我们安装了openssl，但是查找库文件还是要去/usr/lib&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;find / -name libssl.so #搜索openssl库文件位置
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564119891498.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ln -s /usr/local/lib64/libssl.so /usr.lib #建立软连接
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;继续，又爆出error: cURL version 7.15.5 or later is required to compile php with cURL support&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libcurl-devel.x86_64  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;error: jpeglib.h not found.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libjpeg-turbo-devel.x86_64 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;error: png.h not found.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libpng-devel.x86_64 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;error: freetype-config not found.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install freetype-devel.x86_64 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;error: Please reinstall the libzip distribution&lt;/p&gt;

&lt;p&gt;将原有卸载选择源码安装&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum remove -y libzip
wget https://nih.at/libzip/libzip-1.2.0.tar.gz
tar -zxvf libzip-1.2.0.tar.gz.tar.gz
cd libzip-1.2.0/
./configure
make&amp;amp;&amp;amp;make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;随后./configure成功，make&amp;amp;&amp;amp;install&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-mcrypt=/usr/include --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --with-iconv --with-zlib --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --enable-mbregex --enable-fpm --enable-mbstring --enable-ftp --with-openssl --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --enable-session --with-curl --with-jpeg-dir --with-freetype-dir --enable-opcache
make&amp;amp;&amp;amp;make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;致命错误：zipconf.h：没有那个文件或目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;find / -name zipconf.h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现在/usr/local/libzip-1.2.0/lib里,复制到需要的地方&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp /usr/local/libzip-1.2.0/lib/zipconf.h /usr/local/include/zipconf.h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功~&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564126538188.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;添加环境变量，将nginx和php加入/etc/profile中&lt;/p&gt;

&lt;p&gt;更改配置文件名称，启动php-fpm&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564127487444.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;配置nginx解析php&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim /usr/local/nginx/conf/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置用户和组，与php-fpm一致，添加默认文件index.php,更改php设置块。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564129056586.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;重启测试一下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;killall nginx
nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564130078963.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;测试成功！最后将配置文件移动到指定目录中。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; cp /usr/local/php-7.3.7/php.ini-development /usr/local/php/etc/php.ini 
 #将配置文件移动到指定目录中
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装配置mysql&#34;&gt;安装配置mysql&lt;/h3&gt;

&lt;p&gt;wget下载过慢，所以用迅雷在官网上下载后再移到虚拟机中&lt;/p&gt;

&lt;p&gt;先创建用户和组&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;groupadd mysql
useradd -s /sbin/nologin -g mysql mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建需要的文件夹并赋予权限&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /usr/local/mysql/data
chown -R mysql:mysql /usr/local/mysql/
touch /var/log/mysql.log
chown -R mysql:mysql /var/log/mysql.log
mkdir -p /var/lib/mysql
chown -R mysql:mysql /var/lib/mysql/
mkdir -p /var/run/mysqld
chown -R mysql:mysql /var/run/mysqld/
mkdir /var/log/mariadb
touch /var/log/mariadb/mariadb.log
chown -R mysql:mysql /var/log/mariadb/ 
mkdir -p /var/run/mariadb
chown -R mysql:mysql /var/run/mariadb/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改配置文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564218805851.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;初始化数据库，并安装秘钥&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysqld --defaults-file=/etc/my.cnf --initialize-insecure --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --user=mysql
mysql_ssl_rsa_setup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564219174456.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;将usr/local/mysql/bin文件夹加入环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysqld_safe --user=mysql &amp;amp; #安全启动
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564220757877.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564220884565.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u root#登录数据库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564221465292.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;登录成功！&lt;/p&gt;

&lt;p&gt;修改一下php.ini使其支持mysql&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564222850819.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我们再建一个网页测试一下&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564222786734.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;测试成功，搭建完成！&lt;/p&gt;

&lt;p&gt;将它们设置为开机自启动&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp /usr/local/php-7.3.7/sapi/fpm/php-fpm.service /usr/lib/systemd/system/
systemctl daemon-reload 
systemctl enable php-fpm.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建nginx.service，实现nginx自启动&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564229176303.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl daemon-reload 
systemctl enable nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564225106148.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -a /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql
chkconfig --add mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564225987894.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;设置完成。&lt;/p&gt;

&lt;h1 id=&#34;安全加固&#34;&gt;安全加固&lt;/h1&gt;

&lt;h3 id=&#34;php加固&#34;&gt;PHP加固&lt;/h3&gt;

&lt;p&gt;php禁止危险函数&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564313935180.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;只允许执行特定目录下脚本&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564314196743.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这样写的话是不行的，这样/usr/local/ngnix/html1下的文件也可以被执行&lt;/p&gt;

&lt;p&gt;如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564315060107.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;避免暴露PHP信息&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564317016920.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;避免暴露错误信息&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564317079208.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;开启http_only&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564317380304.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;指定上传文件的路径&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564317801719.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;nginx加固&#34;&gt;NGINX加固&lt;/h3&gt;

&lt;p&gt;已指定用户和组&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564318260733.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;禁用特殊字符，防止SQL注入&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564321874210.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;封杀特定URL&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564321994220.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;禁止数据文件的PHP执行&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564319195377.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;封杀可疑Agent&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564320041797.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;限制方法和行为&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564321671964.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;mysql加固&#34;&gt;MYSQL加固&lt;/h3&gt;

&lt;p&gt;已指定用户为不能使用shell的mysql，将数据存储文件存储data中所有者为mysql&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564320812382.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-lnmp-environment/1564321223669.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://Prometheussssss.github.io/about/</link>
      <pubDate>Wed, 07 Aug 2019 23:27:44 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/about/</guid>
      <description>

&lt;h2 id=&#34;毕业于天津理工大学&#34;&gt;毕业于天津理工大学&lt;/h2&gt;

&lt;h2 id=&#34;现正准备tofel-gre-小白成长-想要学习pwn-日后有想打ctf的拉我一个啊&#34;&gt;现正准备TOFEL&amp;amp;GRE,小白成长，想要学习PWN，日后有想打CTF的拉我一个啊。。&lt;/h2&gt;

&lt;h2 id=&#34;希望研究生能继续学习安全-希望我能有研究生上&#34;&gt;希望研究生能继续学习安全, 希望我能有研究生上: )&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Github Pages&#43;Hugo博客搭建</title>
      <link>https://Prometheussssss.github.io/2019/build-my-blog-with-hugogithub-pages/</link>
      <pubDate>Wed, 07 Aug 2019 22:49:07 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/build-my-blog-with-hugogithub-pages/</guid>
      <description>

&lt;h1 id=&#34;使用github-hugo搭建blog&#34;&gt;使用Github+Hugo搭建Blog&lt;/h1&gt;

&lt;p&gt;经群里大师傅推荐，我选择使用Github+Hugo搭建我的blog。&lt;/p&gt;

&lt;p&gt;相较于Hexo，基于go语言的Hugo有更快的生成速度。&lt;/p&gt;

&lt;h2 id=&#34;0x00-准备工作&#34;&gt;0x00.准备工作&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;注册Github账号&lt;/li&gt;
&lt;li&gt;安装Git客户端&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;0x01-搭建githubpages&#34;&gt;0x01.搭建GithubPages&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;新建一个Github repository,名字要用&lt;em&gt;username&lt;/em&gt;.github.io(username是Github用户名)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-my-blog/1565184384815.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;0x02-安装hugo&#34;&gt;0x02.安装hugo&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;hugo基于go语言，在早期版本我们先要安装go语言，在现有版本中已经不需要安装任何依赖，直接下载即可。&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载完成后解压到安装目录，并将目录加入环境变量中。在这里我将hugo解压到E:/Hugo/bin中，安装完成后输入&lt;code&gt;hugo version&lt;/code&gt;进行验证。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-my-blog/1565187050626.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入到将要存放博客文件的目录中使用&lt;code&gt;hugo new site+网站名&lt;/code&gt;创建网站。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Hugo\Mysites
hugo new site Prometheussssss.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://Prometheussssss.github.io/images/build-environment/build-my-blog/1565187453287.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;网站结构&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们的Mysites目录下将会出现一个名为Prometheussssss.github.io的新文件夹，目录如下,其中archetypes包括内容类型，在创建新内容时自动生成内容的配置。config.toml是网站的配置属性文件。content文件夹里放你网站的内容，例如你发布的博客文章。data目录是Hugo使用的配置文件存放的地方。layout目录存放布局内容，决定内容如何呈现。static目录存放静态资源如图片、css等。themes用于存放网站主题。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;|-- archetypes
|-- config.toml
|-- content
|-- data
|-- layouts
|-- static
|-- themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;0x03-换个皮肤&#34;&gt;0x03.换个皮肤&lt;/h2&gt;

&lt;p&gt;主题会放在&lt;code&gt;themes&lt;/code&gt;文件夹下，在这里我选择LeaveIt主题。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd themes
git clone https://github.com/liuzc/LeaveIt.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;0x04-编辑文章&#34;&gt;0x04.编辑文章&lt;/h2&gt;

&lt;p&gt;在项目界面下可以使用&lt;code&gt;hugo new&lt;/code&gt;命令在content目录下新建相应文件。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建一个about界面。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new about.md
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;about.md 会被自动生成到 content/about.md ，其内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;About&amp;quot;
date: 2019-08-07T23:27:44+08:00
draft: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文件的正文内容为&lt;code&gt;Markdown&lt;/code&gt;格式，&lt;code&gt;+++&lt;/code&gt;之间的内容为&lt;a href=&#34;https://github.com/toml-lang/toml&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;TOML&lt;/a&gt;格式，根据喜好，可以换成 &lt;a href=&#34;https://yaml.org&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;YAML&lt;/a&gt; 格式（使用 &lt;code&gt;---&lt;/code&gt; 标记）或者 &lt;a href=&#34;https://www.json.org&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;JSON&lt;/a&gt; 格式。当&lt;code&gt;draft&lt;/code&gt;字段为&lt;code&gt;true&lt;/code&gt;时，文章为草稿，不会被发布，这里将此字段改为&lt;code&gt;false&lt;/code&gt;。具体格式&amp;ndash;&amp;gt;&lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建第一篇文章，放到 posts 目录，方便之后管理。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new posts/build-my-blog.md
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;修改初始内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Github Pages+Hugo博客搭建&amp;quot;
date: 2019-08-07T22:49:07+08:00
draft: false
share: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;0x05-本地测试&#34;&gt;0x05.本地测试&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没在&lt;code&gt;config.toml&lt;/code&gt;中设置主题在这里要加上&lt;code&gt;-t “所选主题”&lt;/code&gt;参数。之后可在&lt;a href=&#34;http://localhost:1313查看&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313查看&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;0x06-部署&#34;&gt;0x06.部署&lt;/h2&gt;

&lt;p&gt;想要将博客部署到我们上面注册的github.io上，首先我们清楚几个概念。&lt;/p&gt;

&lt;p&gt;想要在blog中插入图片我们可以将图片存在github/cdn/图床（七牛、腾讯等）/本地&lt;/p&gt;

&lt;p&gt;我选择将图片存放在本地，注意：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;第一、在config.toml中配置baseurl。作用是无论在本地还是发布出去，图片的路径都是相对于baseurl而言的。

第二、在Markdown图片路径中，以static为根目录写全路径。

示例：假设测试baseurl为`http://localhost:1313/`，图片位置：`/static/img/hugo/123.png`，那么在Markdown中写作`![图片说明](/img/hugo/123.png)`。这时，在浏览器就可以看到图片了。                                                                                        #转载自参考[5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要发布时，将baseurl改为&lt;code&gt;https://用户名.github.io/&lt;/code&gt;的实际url。之后在项目目录输入如下命令。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo                 #编译生成public文件夹
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入public目录中,打开git bash&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
git add .
git commit -m &amp;quot;Initial commit.&amp;quot;
git remote add origin https://github.com/Prometheussssss/Prometheussssss.github.io.git
                                 #url可以在仓库建立成功界面找到https或ssh方式均可
git push -u origin master        
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后一步可能报错&lt;code&gt;The authenticity of host &#39;github.com (13.229.188.59)&#39; can&#39;t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.&lt;/code&gt;&lt;a href=&#34;https://blog.csdn.net/qq_34446663/article/details/81106018&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;解决方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;很好，接下来就可以访问啦！&lt;/p&gt;

&lt;h2 id=&#34;0x07-参考文献&#34;&gt;0x07.参考文献&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://brent-li.github.io/post/build-personal-site-with-hugo/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://brent-li.github.io/post/build-personal-site-with-hugo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&#34;https://www.gohugo.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugo中文文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3]&lt;a href=&#34;https://blog.csdn.net/kikajack/article/details/80413052&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/kikajack/article/details/80413052&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4] &lt;a href=&#34;https://blog.csdn.net/qq_37577660/article/details/78565899&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Git操作&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[5] &lt;a href=&#34;https://blog.csdn.net/qq_30682027/article/details/83536577&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/qq_30682027/article/details/83536577&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>