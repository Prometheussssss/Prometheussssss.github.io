<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Prometheus&#39;s Blog</title>
    <link>https://Prometheussssss.github.io/posts/</link>
    <description>Recent content in Posts on Prometheus&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Aug 2019 10:34:27 +0800</lastBuildDate>
    
	<atom:link href="https://Prometheussssss.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL System Tables &amp; Hashcat</title>
      <link>https://Prometheussssss.github.io/2019/mysql-system-tables/</link>
      <pubDate>Sun, 25 Aug 2019 10:34:27 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/mysql-system-tables/</guid>
      <description>数据库系统表相关学习 利用数据库的功能读写文件 首先介绍一下在MySQL 5.7.6引入的新特性&amp;ndash;secure_file_priv参数
这个参数用来限制数据导入和导出操作的效果，例如执行LOAD DATA、SELECT … INTO OUTFILE语句和LOAD_FILE()函数。这些操作需要用户具有FILE权限。 如果这个参数为空，这个变量没有效果； 如果这个参数设为一个目录名，MySQL服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它； 如果这个参数为NULL，MySQL服务会禁止导入和导出操作。
我们可以使用show variables like &amp;quot;%secure%&amp;quot;查一下当前字段设置
打开我们的配置文件，加上secure_file_priv=&amp;quot;/&amp;quot;意为允许将数据导出到任意目录
再次查看，修改成功
进行一下测试
可以看到文件是用户mysql创建的
如果mysql用户权限不足就会报错
总结：想要进行文件读写需满足以下条件
 目标目录要有可写权限 当前数据库用户要有FILE权限 目标文件不能已存在 secure_file_priv的值为空(如果值为某一文件夹，那么仅该目录可操作) 路径完整  mysql中的系统表 在mysql v5.7.26中主要有这四个系统库
重点关注information_schema和mysql
information_schema数据库部分表说明 •SCHEMATA表：提供了当前mysql实例中所有数据库的信息。是show databases的结果取之此表。
•TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。是show tables from schemaname的结果取之此表。
•COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。是show columns from schemaname.tablename的结果取之此表。
•STATISTICS表：提供了关于表索引的信息。是show index from schemaname.tablename的结果取之此表。
•USER_PRIVILEGES（用户权限）表：给出了关于全程权限的信息。该信息源自mysql.user授权表。是非标准表。
•SCHEMA_PRIVILEGES（方案权限）表：给出了关于方案（数据库）权限的信息。该信息来自mysql.db授权表。是非标准表。
•TABLE_PRIVILEGES（表权限）表：给出了关于表权限的信息。该信息源自mysql.tables_priv授权表。是非标准表。
•COLUMN_PRIVILEGES（列权限）表：给出了关于列权限的信息。该信息源自mysql.columns_priv授权表。是非标准表。
•CHARACTER_SETS（字符集）表：提供了mysql实例可用字符集的信息。是SHOW CHARACTER SET结果集取之此表。
•COLLATIONS表：提供了关于各字符集的对照信息。 •COLLATION_CHARACTER_SET_APPLICABILITY表：指明了可用于校对的字符集。这些列等效于SHOW COLLATION的前两个显示字段。 •TABLE_CONSTRAINTS表：描述了存在约束的表。以及表的约束类型。
•KEY_COLUMN_USAGE表：描述了具有约束的键列。
•ROUTINES表：提供了关于存储子程序（存储程序和函数）的信息。此时，ROUTINES表不包含自定义函数（UDF）。名为“mysql.proc name”的列指明了对应于INFORMATION_SCHEMA.ROUTINES表的mysql.proc表列。
•VIEWS表：给出了关于数据库中的视图的信息。需要有show views权限，否则无法查看视图信息。
•TRIGGERS表：提供了关于触发程序的信息。必须有super权限才能查看该表 mysql数据库部分表说明 在mysql数据库中，有mysql_install_db脚本初始化权限表，存储权限的表有：
1、user表: 用户列、权限列、安全列、资源控制列</description>
    </item>
    
    <item>
      <title>SQL Language</title>
      <link>https://Prometheussssss.github.io/2019/sql-language/</link>
      <pubDate>Thu, 08 Aug 2019 15:59:30 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/sql-language/</guid>
      <description>SQL基础知识 SQL与NoSQL的区别  类型区别：SQL数据库主要被称为关系型数据库，而NoSQL主要被称为非关系型数据库或分布式数据库。 语言：SQL数据库基于结构化查询语言（SQL）定义和操作数据。从一方面看看这种语言是非常强大的。SQL是最通用和最广泛使用的选项之一，这使使其成为一个安全的选择，而且尤其适用于复杂的查询。但从另一方面来说，它也有局限性。SQL要求在使用之前预先确定数据的结构，并且所有数据都必须遵循相同的结构。这可能需要大量的前期准备，并且这通常意味着这意味着结构的变化更加困难而且会对对整个系统造成破坏。 NoSQL数据库具有非结构化数据的动态模式。数据以多种方式存储，这意味着它可以是面向文档，面向列，基于图形或键值存储。这种灵活性意味着可以在没有首先定义结构的情况下创建文档。每个文档也可以有自己独特的结构。语法因数据库而异，可以随时添加字段。 可伸缩性：在几乎任何情况下，SQL数据库都是可垂直扩展的。这意味着可以通过增加RAM，CPU或SSD等功能来增加单个服务器的负载。但另一方面，NoSQL数据库可以横向扩展。这意味着您可以通过分片或在NoSQL数据库中添加更多服务器来处理更多流量。它类似于在同一建筑物中添加更多楼层，而不是在附近增加更多建筑物。因此NoSQL最终可以变得更大，更强大，使这些数据库成为大型或不断变化的数据集的首选。 结构：SQL数据库是基于表的，另一方面NoSQL数据库是键值对，基于文档的，图形数据库或宽列存储。这使得关系SQL数据库成为需要多行事务的应用程序（如会计系统）或为关系结构构建的遗留系统的更好选择。 遵循的属性：SQL数据库遵循ACID属性（原子性，一致性，隔离性和持久性），而NoSQL数据库遵循Brewers CAP定理（一致性，可用性和分区容差）。  SQL数据库的一些示例包括PostgreSQL，MySQL，Oracle和Microsoft SQL Server。NoSQL数据库示例包括Redis，RavenDB Cassandra，MongoDB，BigTable，HBase，Neo4j和CouchDB。
理论学习 MySQL支持多种数据类型，大致可分为：数值、日期/时间、字符串三类。
数值类型 日期和时间类型 字符串类型 好的，开始实际操作
用户登录mysql -u 用户名 -p 密码 (-h 远程登录ip）
show databases; #显示数据库信息  MySQL v5.7.26初始有这四个库，其中：
information_schema是一个信息数据库，它保存着关于MySQL服务器所维护的所有其他数据库的信息。(如数据库名，数据库的表，表栏的数据类型与访问权限等。
mysql是mysql的核心数据库，类似于sql server中的master表，主要负责存储数据库的用户、权限设置、关键字等mysql自己需要使用的控制和管理信息。
performance_schema主要用于收集数据库服务器性能参数。并且库里表的存储引擎均为PERFORMANCE_SCHEMA，而用户是不能创建存储引擎为PERFORMANCE_SCHEMA的表。MySQL5.7默认是开启的。
sys库所有的数据源来自：performance_schema。目标是把performance_schema的把复杂度降低，让DBA能更好的阅读这个库里的内容。让DBA更快的了解DB的运行情况。
实际操作 常用语句有：
use test; #选取数据库test create table student(...,...,...); #建student表 show tables; #查看所有数据表 desc student; #查看student表的字段信息 insert into student values(...,...,...); #向student表中插入数据 show create table student; #查看student表的所有信息，包括一些字段类型，字段的约束，外键，主键，索引，字符编码等等。 drop table student; #删除student表 select * from student where id=12345; #查询id为12345同学信息 select id from student where name like &#39;L%&#39;; #查询名字以L开头同学的学号 select * from score where id=(select id from student where name=&#39;Lily&#39;); #查询Lily的成绩 alter table student change name stu_name varchar(20); #修改字段名 alter table student add grade smallint; #向student表中增加grade列 update student set id=11111 where stu_name=&#39;Tom&#39;; #修改内容 delete from student where id=12347; #删除student中学号为12345同学信息 drop table score; #删除score表 drop database test; #删除test库  实际操作:建立学生表，主键为学号，存有学号、姓名、性别。建立成绩表，主键为学号，存有语文、数学、英语。成绩表学号为学生表外键。</description>
    </item>
    
    <item>
      <title>Build Lnmp Environment</title>
      <link>https://Prometheussssss.github.io/2019/build-lnmp-environment/</link>
      <pubDate>Thu, 08 Aug 2019 10:16:49 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/build-lnmp-environment/</guid>
      <description>环境准备 安装CentOS7 安装nginx  安装CentOS7时选择安装了基本开发环境，所以不必先安装gcc，gcc-c++  ==1. 安装rewrite模块所需PCRE库==
cd /usr/loacl #将其装入local文件夹中 wget https://sourceforge.net/projects/pcre/files/pcre/8.43/pcre-8.43.tar.gz #下载最新PCRE  tar -zxvf pcre-8.43.tar.gz #解压 cd pcre-8.36 ./configure #配置环境 make &amp;amp;&amp;amp; make install #编译安装  ==2. 安装SSL库==
和第一步原理类似
cd .. wget http://www.openssl.org/source/openssl-1.1.1c.tar.gz tar -zxvf openssl-1.0.1j.tar.gz cd openssl-1.0.1j ./configure make &amp;amp;&amp;amp; make install  ==3. 安装zlib库==
cd /usr/local/ wget http://zlib.net/zlib-1.2.11.tar.gz tar -zxvf zlib-1.2.11.tar.gz cd zlib-1.2.11 ./configure make &amp;amp;&amp;amp; make instal  ==4.安装nginx==
cd /usr/local/ wget http://nginx.org/download/nginx-1.16.0.tar.gz tar -zxvf nginx-1.</description>
    </item>
    
    <item>
      <title>Github Pages&#43;Hugo博客搭建</title>
      <link>https://Prometheussssss.github.io/2019/build-my-blog-with-hugogithub-pages/</link>
      <pubDate>Wed, 07 Aug 2019 22:49:07 +0800</pubDate>
      
      <guid>https://Prometheussssss.github.io/2019/build-my-blog-with-hugogithub-pages/</guid>
      <description>使用Github+Hugo搭建Blog 经群里大师傅推荐，我选择使用Github+Hugo搭建我的blog。
相较于Hexo，基于go语言的Hugo有更快的生成速度。
0x00.准备工作  注册Github账号 安装Git客户端  0x01.搭建GithubPages  新建一个Github repository,名字要用username.github.io(username是Github用户名)  0x02.安装hugo  hugo基于go语言，在早期版本我们先要安装go语言，在现有版本中已经不需要安装任何依赖，直接下载即可。下载地址 下载完成后解压到安装目录，并将目录加入环境变量中。在这里我将hugo解压到E:/Hugo/bin中，安装完成后输入hugo version进行验证。   进入到将要存放博客文件的目录中使用hugo new site+网站名创建网站。
cd Hugo\Mysites hugo new site Prometheussssss.github.io    网站结构  我们的Mysites目录下将会出现一个名为Prometheussssss.github.io的新文件夹，目录如下,其中archetypes包括内容类型，在创建新内容时自动生成内容的配置。config.toml是网站的配置属性文件。content文件夹里放你网站的内容，例如你发布的博客文章。data目录是Hugo使用的配置文件存放的地方。layout目录存放布局内容，决定内容如何呈现。static目录存放静态资源如图片、css等。themes用于存放网站主题。
|-- archetypes |-- config.toml |-- content |-- data |-- layouts |-- static |-- themes  0x03.换个皮肤 主题会放在themes文件夹下，在这里我选择LeaveIt主题。
cd themes git clone https://github.com/liuzc/LeaveIt.git  0x04.编辑文章 在项目界面下可以使用hugo new命令在content目录下新建相应文件。
 创建一个about界面。
hugo new about.md   about.md 会被自动生成到 content/about.</description>
    </item>
    
  </channel>
</rss>